public class StackImpl<T> {

	private T[] array;
	private int top;

	public StackImpl(int size) {
		array = (T[]) new Object[size];
		top = -1;
	}


	public T top() {
		if(isEmpty()) {
			return null;
		}
		
		return array[top];
	}

	public boolean isEmpty() {
		return top == -1;
	}

	public boolean isFull() {
		return top == (array.length - 1);
	}

	public void push(T element) throws StackOverflowException {
		if(isFull()) {
			throw new StackOverflowException();
		}
		if(!(element == null)) {
			top ++;
			array[top] = element;
		}
		
	}

	public T pop() throws StackUnderflowException {
		if(isEmpty()) {
			throw new StackUnderflowException();
		}
		T value = top();
		top --;
		return value;
	}

}
